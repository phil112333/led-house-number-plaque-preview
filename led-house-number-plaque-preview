<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=1200, initial-scale=0.3, minimum-scale=0.1, maximum-scale=3.0, user-scalable=yes">
  <title>Door Sign Design Interface</title>
  
  <style>
    /* 最强力的WordPress + Avada主题覆盖 */
    * {
      box-sizing: border-box !important;
    }
    
    html {
      margin: 0 !important;
      padding: 0 !important;
      width: 100% !important;
      height: 100% !important;
    }
    
    body {
      margin: 0 !important;
      padding: 0 !important;
      width: 100% !important;
      min-height: 100vh !important;
      background: linear-gradient(135deg, #1a1a1a, #2d2d2d, #1f1f1f) !important;
      font-family: 'Inter', Arial, sans-serif !important;
      color: white !important;
      overflow-x: hidden !important;
      overflow-y: auto !important;
      border: 2px solid rgba(255, 255, 255, 0.2) !important;
      border-radius: 10px !important;
      box-sizing: border-box !important;
    }

    /* 专门针对Avada主题的重置 */
    .avada-page-titlebar,
    .fusion-page-title-bar,
    .fusion-header,
    .fusion-secondary-header,
    .fusion-header-wrapper,
    #wrapper,
    #main,
    .fusion-main,
    .post-content,
    .fusion-post-content,
    .fusion-builder-container,
    .fusion-container,
    .fusion-row,
    .fusion-builder-row,
    .fusion-layout-column,
    .fusion-column-wrapper {
      max-width: none !important;
      width: 100% !important;
      margin: 0 !important;
      padding: 0 !important;
      background: transparent !important;
    }

    /* 通用WordPress容器重置 */
    .site,
    .site-content,
    .content-area,
    .site-main,
    .entry-content,
    .wp-site-blocks,
    .wp-block-group,
    .wp-block-code,
    .wp-block-html,
    article,
    .post,
    .page,
    .container,
    .wrap,
    .main,
    .content,
    .inner,
    .site-inner,
    main,
    #main,
    #content,
    #primary {
      max-width: none !important;
      width: 100% !important;
      margin: 0 !important;
      padding: 0 !important;
      background: transparent !important;
    }

    /* 页面构建器支持 */
    .elementor,
    .elementor-section,
    .elementor-container,
    .vc_row,
    .wpb_wrapper {
      max-width: none !important;
      width: 100% !important;
      margin: 0 !important;
      padding: 0 !important;
    }

    /* 确保我们的容器在最上层显示 */
    .container {
      position: relative !important;
      z-index: 999999 !important;
      width: 100% !important;
      min-height: 100vh !important;
      margin: 0 !important;
      padding: 8px !important;
      box-sizing: border-box !important;
      display: flex !important;
      flex-direction: column !important;
      background: linear-gradient(135deg, #1a1a1a, #2d2d2d, #1f1f1f) !important;
    }

    /* Load custom fonts from GitHub - Original 23 fonts */
    @font-face {
      font-family: 'Abril Fatface';
      src: url('https://raw.githubusercontent.com/phil112333/backlit-fonts/main/AbrilFatface-Regular.woff2') format('woff2');
    }
    @font-face {
      font-family: 'Alfa Slab One';
      src: url('https://raw.githubusercontent.com/phil112333/backlit-fonts/main/AlfaSlabOne.woff2') format('woff2');
    }
    @font-face {
      font-family: 'Andada Pro';
      src: url('https://raw.githubusercontent.com/phil112333/backlit-fonts/main/AndadaPro-Italic.woff2') format('woff2');
      font-style: italic;
    }
    @font-face {
      font-family: 'Audiowide';
      src: url('https://raw.githubusercontent.com/phil112333/backlit-fonts/main/Audiowide-Regular.woff2') format('woff2');
    }
    @font-face {
      font-family: 'Avant Garde';
      src: url('https://raw.githubusercontent.com/phil112333/backlit-fonts/main/AvantGarde.woff2') format('woff2');
    }
    @font-face {
      font-family: 'Bauhaus';
      src: url('https://raw.githubusercontent.com/phil112333/backlit-fonts/main/Bauhaus.woff2') format('woff2');
    }
    @font-face {
      font-family: 'Bebas Neue';
      src: url('https://raw.githubusercontent.com/phil112333/backlit-fonts/main/BebasNeue-Regular.woff2') format('woff2');
    }
    @font-face {
      font-family: 'Bowlby One SC';
      src: url('https://raw.githubusercontent.com/phil112333/backlit-fonts/main/BowlbyOneSC-Regular.woff2') format('woff2');
    }
    @font-face {
      font-family: 'Caveat Brush';
      src: url('https://raw.githubusercontent.com/phil112333/backlit-fonts/main/CaveatBrush-Regular.woff2') format('woff2');
    }
    @font-face {
      font-family: 'Damion';
      src: url('https://raw.githubusercontent.com/phil112333/backlit-fonts/main/Damion.woff2') format('woff2');
    }
    @font-face {
      font-family: 'Fredoka One';
      src: url('https://raw.githubusercontent.com/phil112333/backlit-fonts/main/FredokaOne-Regular.woff2') format('woff2');
    }
    @font-face {
      font-family: 'Fugaz One';
      src: url('https://raw.githubusercontent.com/phil112333/backlit-fonts/main/FugazOne-Regular.woff2') format('woff2');
    }
    @font-face {
      font-family: 'Galiver Sans';
      src: url('https://raw.githubusercontent.com/phil112333/backlit-fonts/main/GaliverSansObliques.woff2') format('woff2');
    }
    @font-face {
      font-family: 'Gloria Hallelujah';
      src: url('https://raw.githubusercontent.com/phil112333/backlit-fonts/main/GloriaHallelujah.woff2') format('woff2');
    }
    @font-face {
      font-family: 'Lobster';
      src: url('https://raw.githubusercontent.com/phil112333/backlit-fonts/main/Lobster14.woff2') format('woff2');
    }
    @font-face {
      font-family: 'Luckiest Guy';
      src: url('https://raw.githubusercontent.com/phil112333/backlit-fonts/main/LuckiestGuy-Regular.woff2') format('woff2');
    }
    @font-face {
      font-family: 'Omega Sans';
      src: url('https://raw.githubusercontent.com/phil112333/backlit-fonts/main/OmegaSans-Regular.woff2') format('woff2');
    }
    @font-face {
      font-family: 'Pacifico';
      src: url('https://raw.githubusercontent.com/phil112333/backlit-fonts/main/Pacifico.woff2') format('woff2');
    }
    @font-face {
      font-family: 'Righteous';
      src: url('https://raw.githubusercontent.com/phil112333/backlit-fonts/main/Righteous-Regular.woff2') format('woff2');
    }
    @font-face {
      font-family: 'Roboto Draft';
      src: url('https://raw.githubusercontent.com/phil112333/backlit-fonts/main/RobotoDraft-Bold.woff2') format('woff2');
      font-weight: bold;
    }
    @font-face {
      font-family: 'Sigmar One';
      src: url('https://raw.githubusercontent.com/phil112333/backlit-fonts/main/SigmarOne.woff2') format('woff2');
    }
    @font-face {
      font-family: 'Stone Walls';
      src: url('https://raw.githubusercontent.com/phil112333/backlit-fonts/main/StoneWalls.woff2') format('woff2');
    }
    @font-face {
      font-family: 'Typo PRO Roboto';
      src: url('https://raw.githubusercontent.com/phil112333/backlit-fonts/main/TypoPRO-Roboto-Italic.woff2') format('woff2');
      font-style: italic;
    }

    /* NEW FONTS FROM GITHUB - 6 additional fonts (#24-#29) */
    @font-face {
      font-family: 'Digit Mono';
      src: url('https://raw.githubusercontent.com/phil112333/backlit-fonts/main/01DigitMono.woff2') format('woff2');
    }
    @font-face {
      font-family: 'Artnoova';
      src: url('https://raw.githubusercontent.com/phil112333/backlit-fonts/main/Artnoova-Regular.woff2') format('woff2');
    }
    @font-face {
      font-family: 'Clarendon BT Black';
      src: url('https://raw.githubusercontent.com/phil112333/backlit-fonts/main/ClarendonBT-Black.woff2') format('woff2');
    }
    @font-face {
      font-family: 'DIN Next LT Bold';
      src: url('https://raw.githubusercontent.com/phil112333/backlit-fonts/main/DINNextLT-Bold.woff2') format('woff2');
      font-weight: bold;
    }
    @font-face {
      font-family: 'Exotic 350 BT Bold';
      src: url('https://raw.githubusercontent.com/phil112333/backlit-fonts/main/Exotic350BT-Bold.woff2') format('woff2');
      font-weight: bold;
    }
    @font-face {
      font-family: 'Swiss 721 BT Heavy';
      src: url('https://raw.githubusercontent.com/phil112333/backlit-fonts/main/Swiss721BT-Heavy.woff2') format('woff2');
      font-weight: 900;
    }

    html, body {
      margin: 0;
      padding: 0;
      width: 100%;
      height: 100vh;
      overflow-x: hidden;
    }

    body {
      background: linear-gradient(135deg, #1a1a1a, #2d2d2d, #1f1f1f);
      font-family: 'Inter', Arial, sans-serif;
      color: white;
    }
    
    .container {
      width: 100%;
      min-height: calc(100vh - 8px);
      margin: 0;
      padding: 8px;
      box-sizing: border-box;
      display: flex;
      flex-direction: column;
      background: transparent;
    }
    
    header {
      text-align: center;
      padding: 8px 0;
      flex-shrink: 0;
    }
    
    h1 {
      font-size: 1.6rem;
      margin-bottom: 6px;
      font-weight: 700;
      text-transform: uppercase;
      letter-spacing: 2px;
      background: linear-gradient(45deg, #ffffff, #f0f0f0, #e0e0e0);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
    }
    
    .subtitle {
      font-size: 0.9rem;
      color: #b0b0b0;
      margin-bottom: 15px;
    }
    
    .main-content {
      display: grid;
      grid-template-columns: 4fr 6fr;
      gap: 20px;
      margin-top: 15px;
      flex: 1;
      min-height: 700px;
    }
    
    .controls {
      background: rgba(40, 40, 40, 0.9);
      border-radius: 15px;
      padding: 10px;
      border: 1px solid rgba(255, 255, 255, 0.1);
    }
    
    .control-section {
      margin-bottom: 10px;
    }
    
    .control-section:last-child {
      margin-bottom: 0;
    }
    
    .control-section label {
      display: block;
      font-size: 1.1rem;
      margin-bottom: 10px;
      font-weight: 600;
      color: #ffffff;
    }
    
    .text-inputs {
      display: grid;
      gap: 10px;
      margin-bottom: 10px;
    }
    
    .text-input {
      width: 100%;
      padding: 6px 10px;
      font-size: 0.95rem;
      border-radius: 8px;
      border: 2px solid #555;
      background: rgba(30, 30, 30, 0.9);
      color: white;
      outline: none;
      font-family: inherit;
      box-sizing: border-box;
    }
    
    .text-input:focus {
      border-color: #888;
    }
    
    .text-input::placeholder {
      color: #999;
    }
    
    .requirements-output {
      width: 100% !important;
      padding: 10px 15px !important;
      font-size: 0.9rem !important;
      border-radius: 8px !important;
      border: 2px solid #4a7c59 !important;
      background: rgba(40, 60, 40, 0.9) !important;
      color: white !important;
      outline: none !important;
      resize: none !important;
      height: 100px !important;
      font-family: 'Courier New', monospace !important;
      line-height: 1.3 !important;
      box-sizing: border-box !important;
    }
    
    .copy-button {
      background: #4a7c59;
      color: white;
      border: none;
      padding: 8px 16px;
      border-radius: 6px;
      cursor: pointer;
      font-size: 0.85rem;
      margin-top: 8px;
      width: 100%;
    }
    
    .copy-button:hover {
      background: #5a8c69;
    }
    
    .selection-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(60px, 1fr));
      gap: 8px;
      margin-top: 8px;
    }
    
    .selection-item {
      text-align: center;
    }
    
    .selection-number {
      font-size: 0.75rem;
      color: #ccc;
      margin-bottom: 4px;
      font-weight: bold;
    }
    
    .selection-box {
      width: 45px;
      height: 45px;
      border-radius: 8px;
      cursor: pointer;
      border: 2px solid rgba(255, 255, 255, 0.3);
      position: relative;
      margin: 0 auto;
    }
    
    .selection-box:hover {
      border-color: rgba(255, 255, 255, 0.8);
      transform: scale(1.1);
    }
    
    .selection-box.active {
      border: 3px solid #ffffff;
      transform: scale(1.15);
      box-shadow: 0 0 15px rgba(255, 255, 255, 0.6);
    }
    
    .selection-box.active::after {
      content: '?';
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      color: #000000;
      font-size: 16px;
      font-weight: 900;
      text-shadow: 0 0 2px rgba(255, 255, 255, 0.8);
    }
    
    /* Light Colors */
    .light-box[data-light="cold-white"] {
      background: linear-gradient(45deg, #e6f3ff, #b3d9ff, #cce7ff);
    }
    
    .light-box[data-light="warm-white"] {
      background: linear-gradient(45deg, #fff5e6, #ffe6b3, #ffebcc);
    }
    
    .light-box[data-light="normal-white"] {
      background: linear-gradient(45deg, #ffffff, #f5f5f5, #eeeeee);
    }
    
    /* Materials - 新颜色排序 */
    .material-box[data-material="brushed-silver"] {
      background: linear-gradient(45deg, #C0C0C0, #E5E5E5, #A8A8A8);
    }
    
    .material-box[data-material="dark-grey"] {
      background: linear-gradient(45deg, #989491, #A5A29F, #8B8885);
    }
    
    .material-box[data-material="white"] {
      background: linear-gradient(45deg, #FEFEFE, #FFFFFF, #F5F5F5);
    }
    
    .material-box[data-material="red"] {
      background: linear-gradient(45deg, #EC2E35, #F54B52, #E01E25);
    }
    
    .material-box[data-material="yellow"] {
      background: linear-gradient(45deg, #FEF503, #FFFF33, #F5F500);
    }
    
    .material-box[data-material="orange"] {
      background: linear-gradient(45deg, #E77818, #F5922B, #D66A0B);
    }
    
    .material-box[data-material="green"] {
      background: linear-gradient(45deg, #009442, #1AAA5B, #007A35);
    }
    
    .material-box[data-material="blue"] {
      background: linear-gradient(45deg, #0094E4, #33AAF0, #0080C7);
    }
    
    .material-box[data-material="purple"] {
      background: linear-gradient(45deg, #6E609E, #8A7DB5, #5A4D87);
    }
    
    .material-box[data-material="light-pink"] {
      background: linear-gradient(45deg, #EF99A2, #F5B3BB, #E97F88);
    }
    
    .material-box[data-material="pink"] {
      background: linear-gradient(45deg, #DE127B, #E8409C, #D40A68);
    }
    
    .material-box[data-material="matte-black"] {
      background: linear-gradient(45deg, #000000, #1a1a1a, #0d0d0d);
    }
    
    .material-box[data-material="brushed-gold"] {
      background: linear-gradient(45deg, #DAA520, #FFD700, #B8860B);
    }
    
    .material-box[data-material="mirror-gold"] {
      background: linear-gradient(135deg, #8B6914, #B8860B, #DAA520);
      filter: brightness(1.1);
    }
    
    .material-box[data-material="mirror-silver"] {
      background: linear-gradient(135deg, #909090, #C0C0C0, #E5E5E5);
      filter: brightness(1.1);
    }
    
    .alignment-options {
      display: grid;
      grid-template-columns: repeat(4, 1fr);
      gap: 8px;
      margin-top: 12px;
    }
    
    .alignment-option {
      padding: 6px 10px;
      background: rgba(60, 60, 60, 0.8);
      border: 2px solid rgba(255, 255, 255, 0.3);
      border-radius: 6px;
      color: #ccc;
      cursor: pointer;
      font-size: 0.9rem;
      text-align: center;
      font-weight: 500;
    }

    .alignment-option:hover {
      border-color: rgba(255, 255, 255, 0.6);
      background: rgba(80, 80, 80, 0.9);
    }

    .alignment-option.active {
      background: rgba(255, 255, 255, 0.15);
      border-color: #ffffff;
      color: #ffffff;
      font-weight: 600;
    }
    
    .preview-container {
      background: rgba(20, 20, 20, 0.9);
      border-radius: 15px;
      padding: 20px;
      border: 1px solid rgba(255, 255, 255, 0.1);
      position: relative;
      display: flex;
      flex-direction: column;
    }
    
    .door-sign-area {
      display: flex;
      align-items: center;
      justify-content: center;
      margin-bottom: 30px;
      min-height: 480px;
    }
    
    .door-sign {
      width: 100%;
      max-width: 750px;
      height: 420px;
      position: relative;
      border-radius: 15px;
      overflow: hidden;
      box-shadow: 
        0 0 20px rgba(255, 255, 255, 0.6),
        0 0 40px rgba(255, 255, 255, 0.4),
        inset 0 0 15px rgba(255, 255, 255, 0.1);
    }
    
    .door-sign-background {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
    }
    
    .horizontal-line {
      position: absolute;
      top: 60%;
      left: 50px;
      right: 50px;
      height: 6px;
      background: rgba(255, 255, 255, 1);
      transform: translateY(-50%);
      border-radius: 3px;
    }
    
    .text-top, .text-bottom, .text-single {
      position: absolute;
      font-weight: 600;
      text-align: center;
      color: white;
      overflow: visible;
      display: flex;
      align-items: center;
      justify-content: center;
      white-space: nowrap;
      text-overflow: clip;
    }
    
    .text-top {
      top: 25px;
      bottom: 38%;
      left: 50px;
      right: 50px;
      font-size: 12rem;
    }
    
    .text-bottom {
      top: 62%;
      bottom: 15px;
      left: 50px;
      right: 50px;
      font-size: 6rem;
    }
    
    .text-single {
      top: 50%;
      transform: translateY(-50%);
      left: 10px;
      right: 10px;
      height: auto;
      font-size: 18rem;
    }
    
    .font-selector {
      flex-shrink: 0;
    }
    
    .font-selector label {
      font-weight: 700;
      font-size: 1rem;
      color: #ffffff;
      margin-bottom: 15px;
      display: block;
    }
    
    .font-grid-container {
      height: 280px;
      overflow-y: auto;
    }
    
    .font-grid {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      gap: 8px;
    }
    
    .font-item {
      display: flex;
      align-items: center;
      gap: 10px;
      cursor: pointer;
      padding: 8px;
      border-radius: 8px;
      border: 2px solid transparent;
    }

    .font-item:hover {
      background-color: rgba(255, 255, 255, 0.05);
    }

    .font-item.selected {
      background-color: rgba(255, 255, 255, 0.1);
      border-color: rgba(255, 255, 255, 0.3);
    }
    
    .font-number {
      font-size: 1rem;
      font-weight: 700;
      color: #999;
      min-width: 25px;
      text-align: center;
    }
    
    .font-preview {
      font-weight: 500;
      font-size: 1.3rem;
      line-height: 1.2;
      color: white;
      flex-grow: 1;
    }

    .light-color-label {
      font-size: 0.65rem;
      color: #ccc;
      margin-top: 4px;
    }

    /* 移除所有响应式设计，保持固定布局 */
  </style>
</head>
<body>
  <div class="container">
    <header>
      <h1>Door Sign Design Preview System</h1>
      <p class="subtitle">Enter text content, select light color and face paint material to preview your door sign in real time</p>
    </header>
    
    <div class="main-content">
      <div class="controls">
        <div class="control-section">
          <label>Text Input:</label>
          <div class="text-inputs">
            <input type="text" class="text-input" id="topText" placeholder="Top text (e.g.: 1037)" value="1037">
            <input type="text" class="text-input" id="bottomText" placeholder="Bottom text (e.g.: Tracy Drive)" value="Tracy Drive">
          </div>
        </div>
        
        <div class="control-section">
          <label>Box Style:</label>
          <div class="alignment-options">
            <div class="alignment-option" data-alignment="right">S1 Right</div>
            <div class="alignment-option active" data-alignment="center">S2 Center</div>
            <div class="alignment-option" data-alignment="left">S3 Left</div>
            <div class="alignment-option" data-alignment="top-left-bottom-right">S4 Top L, Bot R</div>
            <div class="alignment-option" data-alignment="top-right-bottom-left">S5 Top R, Bot L</div>
            <div class="alignment-option" data-alignment="single-right">S11 Single Right</div>
            <div class="alignment-option" data-alignment="single-center">S12 Single Center</div>
            <div class="alignment-option" data-alignment="single-left">S13 Single Left</div>
          </div>
        </div>
        
        <div class="control-section">
          <label>Select Lighting Color:</label>
          <div class="selection-grid">
            <div class="selection-item">
              <div class="selection-number">#1</div>
              <div class="selection-box light-box active" data-light="normal-white" data-number="1"></div>
              <div class="light-color-label">White(6500k)</div>
            </div>
            <div class="selection-item">
              <div class="selection-number">#2</div>
              <div class="selection-box light-box" data-light="warm-white" data-number="2"></div>
              <div class="light-color-label">Warm White(4500k)</div>
            </div>
            <div class="selection-item">
              <div class="selection-number">#3</div>
              <div class="selection-box light-box" data-light="cold-white" data-number="3"></div>
              <div class="light-color-label">Cold white(10000k)</div>
            </div>
          </div>
        </div>
        
        <div class="control-section">
          <label>Box Color Select:</label>
          <div class="selection-grid">
            <div class="selection-item">
              <div class="selection-number">F1</div>
              <div class="selection-box material-box" data-material="brushed-silver" data-number="F1"></div>
              <div style="font-size: 0.65rem; color: #ccc; margin-top: 4px;">Brushed Silver</div>
            </div>
            <div class="selection-item">
              <div class="selection-number">F2</div>
              <div class="selection-box material-box" data-material="dark-grey" data-number="F2"></div>
              <div style="font-size: 0.65rem; color: #ccc; margin-top: 4px;">Dark Grey</div>
            </div>
            <div class="selection-item">
              <div class="selection-number">F3</div>
              <div class="selection-box material-box" data-material="white" data-number="F3"></div>
              <div style="font-size: 0.65rem; color: #ccc; margin-top: 4px;">White</div>
            </div>
            <div class="selection-item">
              <div class="selection-number">F4</div>
              <div class="selection-box material-box" data-material="red" data-number="F4"></div>
              <div style="font-size: 0.65rem; color: #ccc; margin-top: 4px;">Red</div>
            </div>
            <div class="selection-item">
              <div class="selection-number">F5</div>
              <div class="selection-box material-box" data-material="yellow" data-number="F5"></div>
              <div style="font-size: 0.65rem; color: #ccc; margin-top: 4px;">Yellow</div>
            </div>
            <div class="selection-item">
              <div class="selection-number">F6</div>
              <div class="selection-box material-box" data-material="orange" data-number="F6"></div>
              <div style="font-size: 0.65rem; color: #ccc; margin-top: 4px;">Orange</div>
            </div>
            <div class="selection-item">
              <div class="selection-number">F7</div>
              <div class="selection-box material-box" data-material="green" data-number="F7"></div>
              <div style="font-size: 0.65rem; color: #ccc; margin-top: 4px;">Green</div>
            </div>
            <div class="selection-item">
              <div class="selection-number">F8</div>
              <div class="selection-box material-box" data-material="blue" data-number="F8"></div>
              <div style="font-size: 0.65rem; color: #ccc; margin-top: 4px;">Blue</div>
            </div>
            <div class="selection-item">
              <div class="selection-number">F9</div>
              <div class="selection-box material-box" data-material="purple" data-number="F9"></div>
              <div style="font-size: 0.65rem; color: #ccc; margin-top: 4px;">Purple</div>
            </div>
            <div class="selection-item">
              <div class="selection-number">F10</div>
              <div class="selection-box material-box" data-material="light-pink" data-number="F10"></div>
              <div style="font-size: 0.65rem; color: #ccc; margin-top: 4px;">Light Pink</div>
            </div>
            <div class="selection-item">
              <div class="selection-number">F11</div>
              <div class="selection-box material-box" data-material="pink" data-number="F11"></div>
              <div style="font-size: 0.65rem; color: #ccc; margin-top: 4px;">Pink</div>
            </div>
            <div class="selection-item">
              <div class="selection-number">F12</div>
              <div class="selection-box material-box active" data-material="matte-black" data-number="F12"></div>
              <div style="font-size: 0.65rem; color: #ccc; margin-top: 4px;">Black</div>
            </div>
            <div class="selection-item">
              <div class="selection-number">F13</div>
              <div class="selection-box material-box" data-material="brushed-gold" data-number="F13"></div>
              <div style="font-size: 0.65rem; color: #ccc; margin-top: 4px;">Brushed Gold</div>
            </div>
            <div class="selection-item">
              <div class="selection-number">F14</div>
              <div class="selection-box material-box" data-material="mirror-gold" data-number="F14"></div>
              <div style="font-size: 0.65rem; color: #ccc; margin-top: 4px;">Mirror Gold</div>
            </div>
            <div class="selection-item">
              <div class="selection-number">F15</div>
              <div class="selection-box material-box" data-material="mirror-silver" data-number="F15"></div>
              <div style="font-size: 0.65rem; color: #ccc; margin-top: 4px;">Mirror Silver</div>
            </div>
          </div>
        </div>
        
        <div class="control-section">
          <label for="requirementsOutput">Copy&paste to "Add your personalization" box:</label>
          <textarea class="requirements-output" id="requirementsOutput" rows="8" placeholder="Customer requirements will appear here...">1.Your Numbers or letters: Line 1: 1037, Line 2: Tracy Drive
2.Box Style: S2
3.Lighting Color Num: #1
4.Box Color: F12
5.Font Num: 
6.Phone Num: </textarea>
          <button class="copy-button" onclick="copyRequirements()">Copy</button>
        </div>
      </div>
      
      <div class="preview-container">
        <div class="door-sign-area">
          <div class="door-sign" id="doorSign">
            <div class="door-sign-background" id="doorBackground"></div>
            <div class="horizontal-line" id="horizontalLine"></div>
            <div class="text-top" id="textTop">1037</div>
            <div class="text-bottom" id="textBottom">Tracy Drive</div>
            <div class="text-single" id="textSingle" style="display: none;">1037 Tracy Drive</div>
          </div>
        </div>
        
        <div class="font-selector">
          <label>Font Selection:</label>
        </div>
        
        <div class="font-grid-container">
          <div class="font-grid" id="fontGrid"></div>
        </div>
      </div>
    </div>
  </div>

  <script>
    const fonts = [
      // 按图片顺序重新排列的字体 (#1-#25)
      'Roboto Draft', 'Digit Mono', 'Sigmar One', 'Avant Garde', 'Bauhaus',
      'Galiver Sans', 'Typo PRO Roboto', 'Abril Fatface', 'Stone Walls', 'Omega Sans',
      'Alfa Slab One', 'Pacifico', 'Andada Pro', 'Audiowide', 'Omega Sans',
      'Bebas Neue', 'Bowlby One SC', 'Caveat Brush', 'Damion', 'Fredoka One',
      'Fugaz One', 'Gloria Hallelujah', 'Lobster', 'Luckiest Guy', 'Righteous',
      
      // 其余字体按原顺序继续 (#26-#30)
      'Artnoova', 'Clarendon BT Black', 'DIN Next LT Bold',
      'Exotic 350 BT Bold', 'Swiss 721 BT Heavy'
    ];
    
    let currentLight = "normal-white";
    let currentLightNumber = "1";
    let currentMaterial = "matte-black";
    let currentMaterialNumber = "F12";
    let currentAlignment = "center";
    let selectedFontNumber = "";
    let currentFont = "Arial";
    
    // Default font sizes - 按比例适中调整
    const defaultFontSizes = {
      top: 11.5,
      bottom: 5.8,
      single: 17
    };
    
    // Light color configurations for glow effect
    const lightConfig = {
      'cold-white': 'rgba(179, 217, 255, 0.8)',
      'warm-white': 'rgba(255, 230, 179, 0.8)', 
      'normal-white': 'rgba(255, 255, 255, 0.8)'
    };
    
    // Material configurations
    const materialConfig = {
      'brushed-silver': 'linear-gradient(45deg, #C0C0C0, #E5E5E5, #A8A8A8)',
      'dark-grey': 'linear-gradient(45deg, #989491, #A5A29F, #8B8885)',
      'white': 'linear-gradient(45deg, #FEFEFE, #FFFFFF, #F5F5F5)',
      'red': 'linear-gradient(45deg, #EC2E35, #F54B52, #E01E25)',
      'yellow': 'linear-gradient(45deg, #FEF503, #FFFF33, #F5F500)',
      'orange': 'linear-gradient(45deg, #E77818, #F5922B, #D66A0B)',
      'green': 'linear-gradient(45deg, #009442, #1AAA5B, #007A35)',
      'blue': 'linear-gradient(45deg, #0094E4, #33AAF0, #0080C7)',
      'purple': 'linear-gradient(45deg, #6E609E, #8A7DB5, #5A4D87)',
      'light-pink': 'linear-gradient(45deg, #EF99A2, #F5B3BB, #E97F88)',
      'pink': 'linear-gradient(45deg, #DE127B, #E8409C, #D40A68)',
      'matte-black': 'linear-gradient(45deg, #000000, #1a1a1a, #0d0d0d)',
      'brushed-gold': 'linear-gradient(45deg, #DAA520, #FFD700, #B8860B)',
      'mirror-gold': 'linear-gradient(135deg, #8B6914, #B8860B, #DAA520)',
      'mirror-silver': 'linear-gradient(135deg, #909090, #C0C0C0, #E5E5E5)'
    };

    // Store current font sizes
    let currentFontSizes = {
      top: defaultFontSizes.top,
      bottom: defaultFontSizes.bottom,
      single: defaultFontSizes.single
    };
    
    // Adjust specific text line with improved alignment handling
    function adjustSpecificLine(lineType) {
      const textElements = {
        top: document.getElementById('textTop'),
        bottom: document.getElementById('textBottom'),
        single: document.getElementById('textSingle')
      };
      
      const element = textElements[lineType];
      if (!element || element.style.display === 'none') return;
      
      const containerWidth = lineType === 'single' ? 735 : 650; // 按比例调整容器宽度
      
      // Store current alignment
      const currentJustifyContent = element.style.justifyContent;
      
      // Temporarily set to flex-start for accurate width measurement
      element.style.justifyContent = 'flex-start';
      
      // Reset to default size first
      currentFontSizes[lineType] = defaultFontSizes[lineType];
      element.style.fontSize = currentFontSizes[lineType] + 'rem';
      
      // Force a reflow to ensure the browser updates the layout
      element.offsetWidth;
      
      // Immediately check and adjust size without animation
      while (element.scrollWidth > containerWidth && currentFontSizes[lineType] > 0.5) {
        currentFontSizes[lineType] -= 0.1;
        element.style.fontSize = currentFontSizes[lineType] + 'rem';
        // Force reflow again
        element.offsetWidth;
      }
      
      // Restore original alignment
      element.style.justifyContent = currentJustifyContent;
    }
    
    // Reset font sizes to default values
    function resetFontSizes() {
      currentFontSizes.top = defaultFontSizes.top;
      currentFontSizes.bottom = defaultFontSizes.bottom;
      currentFontSizes.single = defaultFontSizes.single;
    }

    // Font selection event in initializeFontGrid
    function initializeFontGrid() {
      const fontGrid = document.getElementById('fontGrid');
      fontGrid.innerHTML = '';
      
      fonts.forEach((font, index) => {
        const fontItem = document.createElement('div');
        fontItem.classList.add('font-item');
        fontItem.setAttribute('data-font-number', index + 1);
        
        fontItem.innerHTML = `
          <div class="font-number">#${index + 1}</div>
          <div class="font-preview" style="font-family: '${font}', sans-serif;">1037<br>Tracy Drive</div>
        `;
        
        fontItem.addEventListener('click', function() {
          document.querySelectorAll('.font-item').forEach(item => {
            item.classList.remove('selected');
          });
          fontItem.classList.add('selected');
          
          selectedFontNumber = `#${index + 1}`;
          currentFont = font;
          
          // Reset font sizes when changing font
          resetFontSizes();
          updatePreview();
          
          // Adjust sizes after preview update
          if (currentAlignment.includes('single')) {
            adjustSpecificLine('single');
          } else {
            adjustSpecificLine('top');
            adjustSpecificLine('bottom');
          }
          
          updateRequirements();
        });
        
        fontGrid.appendChild(fontItem);
      });
    }

    // Update preview
    function updatePreview() {
      const doorSign = document.getElementById('doorSign');
      const doorBackground = document.getElementById('doorBackground');
      const horizontalLine = document.getElementById('horizontalLine');
      const textTop = document.getElementById('textTop');
      const textBottom = document.getElementById('textBottom');
      const textSingle = document.getElementById('textSingle');
      
      const topText = document.getElementById('topText').value || '1037';
      const bottomText = document.getElementById('bottomText').value || 'Tracy Drive';
      
      // Update background material
      doorBackground.style.background = materialConfig[currentMaterial];
      
      // Update text content
      textTop.textContent = topText;
      textBottom.textContent = bottomText;
      
      // Decide single line text content based on alignment
      if (currentAlignment.includes('single')) {
        textSingle.textContent = topText;
      } else {
        textSingle.textContent = `${topText} ${bottomText}`;
      }
      
      // Update font family
      textTop.style.fontFamily = `'${currentFont}', sans-serif`;
      textBottom.style.fontFamily = `'${currentFont}', sans-serif`;
      textSingle.style.fontFamily = `'${currentFont}', sans-serif`;
      
      // 专门为Digit Mono字体增加字符间距
      if (currentFont === 'Digit Mono') {
        textTop.style.letterSpacing = '0.15em';
        textBottom.style.letterSpacing = '0.15em';
        textSingle.style.letterSpacing = '0.15em';
      } else {
        textTop.style.letterSpacing = 'normal';
        textBottom.style.letterSpacing = 'normal';
        textSingle.style.letterSpacing = 'normal';
      }
      
      // Update glow effects with customer selected color
      const glowColor = lightConfig[currentLight];
      
      // Background uses customer selected color - brighten backlight
      const bgGlow = glowColor.replace('0.8', '0.7');
      doorSign.style.boxShadow = `
        0 0 20px ${bgGlow},
        0 0 40px ${bgGlow},
        0 0 60px ${glowColor.replace('0.8', '0.4')},
        inset 0 0 25px ${glowColor.replace('0.8', '0.2')}
      `;
      
      // 横杠跟随灯光颜色变化，移除发光效果
      horizontalLine.style.background = glowColor.replace('0.8', '1');
      horizontalLine.style.boxShadow = 'none';
      
      // Text glow effect - synchronized with horizontal line color, following selected light color
      let textShadow;
      
      // 字体跟随灯光颜色变化，移除text-shadow避免重叠
      if (currentMaterial === 'white') {
        // 白色背景时字体跟随灯光颜色但保持黑边
        textTop.style.color = glowColor.replace('0.8', '0.9');
        textBottom.style.color = glowColor.replace('0.8', '0.9');
        textSingle.style.color = glowColor.replace('0.8', '0.9');
        textShadow = `
          -1px -1px 0 #000000,
          1px -1px 0 #000000,
          -1px 1px 0 #000000,
          1px 1px 0 #000000
        `;
        
        // 横杠也添加黑色轮廓
        horizontalLine.style.border = '1px solid #000000';
      } else {
        // 其他背景时字体跟随灯光颜色，无发光效果
        textTop.style.color = glowColor.replace('0.8', '0.9');
        textBottom.style.color = glowColor.replace('0.8', '0.9');
        textSingle.style.color = glowColor.replace('0.8', '0.9');
        textShadow = 'none';
        
        // 移除横杠的黑色轮廓
        horizontalLine.style.border = 'none';
      }
      
      // Remove text stroke
      textTop.style.webkitTextStroke = '';
      textBottom.style.webkitTextStroke = '';
      textSingle.style.webkitTextStroke = '';
      
      textTop.style.textShadow = textShadow;
      textBottom.style.textShadow = textShadow;
      textSingle.style.textShadow = textShadow;
      
      // Handle alignment
      updateAlignment();
    }
    
    // Update alignment and input visibility
    function updateAlignment() {
      const textTop = document.getElementById('textTop');
      const textBottom = document.getElementById('textBottom');
      const textSingle = document.getElementById('textSingle');
      const horizontalLine = document.getElementById('horizontalLine');
      const bottomTextInput = document.getElementById('bottomText');
      
      // Reset font sizes to default values when changing alignment
      resetFontSizes();
      textTop.style.fontSize = defaultFontSizes.top + 'rem';
      textBottom.style.fontSize = defaultFontSizes.bottom + 'rem';
      textSingle.style.fontSize = defaultFontSizes.single + 'rem';
      
      // Hide/show elements and input fields based on alignment
      if (currentAlignment.includes('single')) {
        textTop.style.display = 'none';
        textBottom.style.display = 'none';
        horizontalLine.style.display = 'none';
        textSingle.style.display = 'flex';
        bottomTextInput.style.display = 'none';
        
        // Single alignment
        switch(currentAlignment) {
          case 'single-left':
            textSingle.style.justifyContent = 'flex-start';
            break;
          case 'single-right':
            textSingle.style.justifyContent = 'flex-end';
            break;
          default:
            textSingle.style.justifyContent = 'center';
        }
      } else {
        textTop.style.display = 'flex';
        textBottom.style.display = 'flex';
        horizontalLine.style.display = 'block';
        textSingle.style.display = 'none';
        bottomTextInput.style.display = 'block';
        
        // Dual text alignment
        switch(currentAlignment) {
          case 'left':
            textTop.style.justifyContent = 'flex-start';
            textBottom.style.justifyContent = 'flex-start';
            break;
          case 'right':
            textTop.style.justifyContent = 'flex-end';
            textBottom.style.justifyContent = 'flex-end';
            break;
          case 'top-left-bottom-right':
            textTop.style.justifyContent = 'flex-start';
            textBottom.style.justifyContent = 'flex-end';
            break;
          case 'top-right-bottom-left':
            textTop.style.justifyContent = 'flex-end';
            textBottom.style.justifyContent = 'flex-start';
            break;
          default:
            textTop.style.justifyContent = 'center';
            textBottom.style.justifyContent = 'center';
        }
      }
    }

    // Update requirements text
    function updateRequirements() {
      const topText = document.getElementById('topText').value || '1037';
      const bottomText = document.getElementById('bottomText').value || 'Tracy Drive';
      const requirementsOutput = document.getElementById('requirementsOutput');
      
      const currentRequirements = requirementsOutput.value;
      const phoneNumMatch = currentRequirements.match(/6\.Phone Num: (.*?)(?=\n|$)/m);
      const existingPhoneNum = phoneNumMatch ? phoneNumMatch[1] : "";
      
      let textContent;
      if (currentAlignment.includes('single')) {
        textContent = `Line 1: ${topText}`;
      } else {
        textContent = `Line 1: ${topText}, Line 2: ${bottomText}`;
      }
      
      // Get alignment number
      let alignmentNumber = "";
      switch(currentAlignment) {
        case 'right': alignmentNumber = "S1"; break;
        case 'center': alignmentNumber = "S2"; break;
        case 'left': alignmentNumber = "S3"; break;
        case 'top-left-bottom-right': alignmentNumber = "S4"; break;
        case 'top-right-bottom-left': alignmentNumber = "S5"; break;
        case 'single-right': alignmentNumber = "S11"; break;
        case 'single-center': alignmentNumber = "S12"; break;
        case 'single-left': alignmentNumber = "S13"; break;
      }
      
      const requirements = `1.Your Numbers or letters: ${textContent}
2.Box Style: ${alignmentNumber}
3.Lighting Color Num: #${currentLightNumber}
4.Box Color: ${currentMaterialNumber}
5.Font Num: ${selectedFontNumber}
6.Phone Num: ${existingPhoneNum}`;
      
      requirementsOutput.value = requirements;
    }

    // Copy requirements function
    function copyRequirements() {
      const requirementsOutput = document.getElementById('requirementsOutput');
      requirementsOutput.select();
      requirementsOutput.setSelectionRange(0, 99999);
      navigator.clipboard.writeText(requirementsOutput.value).then(() => {
        const button = document.querySelector('.copy-button');
        const originalText = button.textContent;
        button.textContent = 'Copied!';
        button.style.background = '#5a8c69';
        setTimeout(() => {
          button.textContent = originalText;
          button.style.background = '#4a7c59';
        }, 2000);
      });
    }

    // Event listeners
    document.getElementById('topText').addEventListener('input', function() {
      const textTop = document.getElementById('textTop');
      const textSingle = document.getElementById('textSingle');
      const topText = this.value || '1037';
      
      // Update text content
      textTop.textContent = topText;
      if (currentAlignment.includes('single')) {
        textSingle.textContent = topText;
        adjustSpecificLine('single');
      } else {
        const bottomText = document.getElementById('bottomText').value || 'Tracy Drive';
        textSingle.textContent = `${topText} ${bottomText}`;
        adjustSpecificLine('top');
      }
      
      updateRequirements();
    });

    document.getElementById('bottomText').addEventListener('input', function() {
      const textBottom = document.getElementById('textBottom');
      const textSingle = document.getElementById('textSingle');
      const topText = document.getElementById('topText').value || '1037';
      const bottomText = this.value || 'Tracy Drive';
      
      // Update text content
      textBottom.textContent = bottomText;
      if (!currentAlignment.includes('single')) {
        textSingle.textContent = `${topText} ${bottomText}`;
        adjustSpecificLine('bottom');
      }
      
      updateRequirements();
    });

    // Light selection
    document.querySelectorAll('.light-box').forEach(lightBox => {
      lightBox.addEventListener('click', function() {
        document.querySelectorAll('.light-box').forEach(box => box.classList.remove('active'));
        this.classList.add('active');
        currentLight = this.getAttribute('data-light');
        currentLightNumber = this.getAttribute('data-number');
        updatePreview();
        
        // Adjust font sizes after light color change
        if (currentAlignment.includes('single')) {
          adjustSpecificLine('single');
        } else {
          adjustSpecificLine('top');
          adjustSpecificLine('bottom');
        }
        
        updateRequirements();
      });
    });

    // Material selection
    document.querySelectorAll('.material-box').forEach(materialBox => {
      materialBox.addEventListener('click', function() {
        document.querySelectorAll('.material-box').forEach(box => box.classList.remove('active'));
        this.classList.add('active');
        currentMaterial = this.getAttribute('data-material');
        currentMaterialNumber = this.getAttribute('data-number');
        updatePreview();
        
        // Adjust font sizes after material change
        if (currentAlignment.includes('single')) {
          adjustSpecificLine('single');
        } else {
          adjustSpecificLine('top');
          adjustSpecificLine('bottom');
        }
        
        updateRequirements();
      });
    });

    // Alignment selection
    document.querySelectorAll('.alignment-option').forEach(alignmentOption => {
      alignmentOption.addEventListener('click', function() {
        document.querySelectorAll('.alignment-option').forEach(option => option.classList.remove('active'));
        this.classList.add('active');
        currentAlignment = this.getAttribute('data-alignment');
        updatePreview();
        
        // Adjust sizes after alignment change
        if (currentAlignment.includes('single')) {
          adjustSpecificLine('single');
        } else {
          adjustSpecificLine('top');
          adjustSpecificLine('bottom');
        }
        
        updateRequirements();
      });
    });

    // Initialize everything
    function initialize() {
      initializeFontGrid();
      updatePreview();
      updateRequirements();
      
      // Initial size adjustment
      if (currentAlignment.includes('single')) {
        adjustSpecificLine('single');
      } else {
        adjustSpecificLine('top');
        adjustSpecificLine('bottom');
      }
    }

    // Start when page loads
    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', initialize);
    } else {
      initialize();
    }

    // Make copyRequirements function globally available
    window.copyRequirements = copyRequirements;
  </script>
</body>
</html>
